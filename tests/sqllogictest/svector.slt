statement ok
SET search_path TO pg_temp, vectors;

statement ok
CREATE TABLE t (id bigserial, val svector);

statement ok
INSERT INTO t (val)
VALUES ('{0:1, 1:2, 2:3}/3'), ('{0:4, 1:5, 2:6}/3');

query I
SELECT vector_dims(val) FROM t;
----
3
3

query R
SELECT round(vector_norm(val)::numeric, 5) FROM t;
----
3.74166
8.77496

query ?
SELECT avg(val) FROM t;
----
{0:2.5, 1:3.5, 2:4.5}/3

query ?
SELECT sum(val) FROM t;
----
{0:5, 1:7, 2:9}/3

statement ok
CREATE TABLE test_vectors (id serial, data vector(1000));

statement ok
INSERT INTO test_vectors (data)
SELECT 
    ARRAY_AGG(CASE WHEN random() < 0.95 THEN 0 ELSE (random() * 99 + 1)::real END)::real[]::vector AS v 
FROM generate_series(1, 1000 * 5000) i
GROUP BY i % 5000;

query ?
SELECT count(*) FROM test_vectors;
----
5000

query R
SELECT vector_norm('{0:3, 1:4}/2'::svector);
----
5

query I
SELECT vector_dims(v) FROM unnest(ARRAY['{0:1, 1:2}/2'::svector, '{0:3}/1'::svector]) v;
----
2
1

query ?
SELECT avg(v) FROM unnest(ARRAY['{0:1, 1:2, 2:3}/3'::svector, '{0:3, 1:5, 2:7}/3'::svector]) v;
----
{0:2, 1:3.5, 2:5}/3

query ?
SELECT avg(v) FROM unnest(ARRAY['{0:1, 1:2, 2:3}/3'::svector, '{0:-1, 1:2, 2:-3}/3'::svector]) v;
----
{1:2}/3

query ?
SELECT avg(v) FROM unnest(ARRAY['{0:1, 1:2, 2:3}/3'::svector, '{0:3, 1:5, 2:7}/3'::svector, NULL]) v;
----
{0:2, 1:3.5, 2:5}/3

query ?
SELECT avg(v) FROM unnest(ARRAY['{0:1, 1:2, 2:3}/3'::svector,NULL]) v;
----
{0:1, 1:2, 2:3}/3

query ?
SELECT avg(v) FROM unnest(ARRAY[]::svector[]) v;
----
NULL

query ?
SELECT avg(v) FROM unnest(ARRAY[NULL]::svector[]) v;
----
NULL

query ?
SELECT avg(v) FROM unnest(ARRAY['{0:3e38}/1'::svector, '{0:3e38}/1'::svector]) v;
----
{0:inf}/1

statement error differs in dimensions
SELECT avg(v) FROM unnest(ARRAY['{0:1, 1:2}/2'::svector, '{0:3}/1'::svector]) v;

query ?
SELECT avg(v) FROM unnest(ARRAY[to_svector(5, '{0,1}', '{2,3}'), to_svector(5, '{0,2}', '{1,3}'), to_svector(5, '{3,4}', '{3,3}')]) v;
----
{0:1, 1:1, 2:1, 3:1, 4:1}/5

query ?
SELECT avg(v) FROM unnest(ARRAY[to_svector(32, '{0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15}', '{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}'), to_svector(32, '{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16}', '{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}'), to_svector(32, '{2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17}', '{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}') ]) v;
----
{0:0.33333334, 1:0.6666667, 2:1, 3:1, 4:1, 5:1, 6:1, 7:1, 8:1, 9:1, 10:1, 11:1, 12:1, 13:1, 14:1, 15:1, 16:0.6666667, 17:0.33333334}/32

# test avg(svector) get the same result as avg(vector)
query ?
SELECT avg(data) = avg(data::svector)::vector FROM test_vectors;
----
t

query ?
SELECT sum(v) FROM unnest(ARRAY['{0:1, 1:2, 2:3}/3'::svector, '{0:3, 1:5, 2:7}/3'::svector]) v;
----
{0:4, 1:7, 2:10}/3

# test zero element
query ?
SELECT sum(v) FROM unnest(ARRAY['{0:1, 1:2, 2:3}/3'::svector, '{0:-1, 1:2, 2:-3}/3'::svector]) v;
----
{1:4}/3

query ?
SELECT sum(v) FROM unnest(ARRAY['{0:1, 1:2, 2:3}/3'::svector, '{0:3, 1:5, 2:7}/3'::svector, NULL]) v;
----
{0:4, 1:7, 2:10}/3

query ?
SELECT sum(v) FROM unnest(ARRAY[]::svector[]) v;
----
NULL

query ?
SELECT sum(v) FROM unnest(ARRAY[NULL]::svector[]) v;
----
NULL

statement error differs in dimensions
SELECT sum(v) FROM unnest(ARRAY['{0:1, 1:2}/2'::svector, '{0:3}/1'::svector]) v;

# should this return an error ? 
query ?
SELECT sum(v) FROM unnest(ARRAY['{0:3e38}/1'::svector, '{0:3e38}/1'::svector]) v;
----
{0:inf}/1

query ?
SELECT sum(v) FROM unnest(ARRAY[to_svector(5, '{0,1}', '{1,2}'), to_svector(5, '{0,2}', '{1,2}'), to_svector(5, '{3,4}', '{3,3}')]) v;
----
{0:2, 1:2, 2:2, 3:3, 4:3}/5

query ?
SELECT sum(v) FROM unnest(ARRAY[to_svector(32, '{0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15}', '{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}'), to_svector(32, '{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16}', '{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}'), to_svector(32, '{2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17}', '{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}') ]) v;
----
{0:1, 1:2, 2:3, 3:3, 4:3, 5:3, 6:3, 7:3, 8:3, 9:3, 10:3, 11:3, 12:3, 13:3, 14:3, 15:3, 16:2, 17:1}/32

# test sum(svector) get the same result as sum(vector)
query ?
SELECT sum(data) = sum(data::svector)::vector FROM test_vectors;
----
t

statement ok
DROP TABLE t, test_vectors; 
