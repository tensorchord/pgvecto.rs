statement ok
DROP TABLE IF EXISTS t;

statement ok
CREATE TABLE t (val vector(3));

statement ok
INSERT INTO t (val) SELECT ARRAY[random(), random(), random()]::real[] FROM generate_series(1, 1000);

# TODO: if previous table has nulls, then this statement fails with 'ERROR:  called `Option::unwrap()` on a `None` value'.
# And because of borrow checker, we can't remove this table before restarting the postgres.
# Maybe we need better error handling.
statement ok
CREATE INDEX ON t USING vectors (val l2_ops)
WITH (options = $$
capacity = 2000
[algorithm.hnsw]
$$);

statement ok
INSERT INTO t (val) VALUES ('[0.6,0.6,0.6]');

query I
SELECT COUNT(1) FROM (SELECT 1 FROM t ORDER BY val <-> '[0.5,0.5,0.5]' limit 10) t2;
----
10

query I
SELECT COUNT(1) FROM (SELECT 1 FROM t ORDER BY val <=> '[0.5,0.5,0.5]' limit 10) t2;
----
10

query I
SELECT COUNT(1) FROM (SELECT 1 FROM t ORDER BY val <#> '[0.5,0.5,0.5]' limit 10) t2;
----
10

statement ok
DROP TABLE t;